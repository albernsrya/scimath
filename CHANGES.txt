SciMath CHANGELOG
=================

Release 4.2.0
-------------

Released : 06 February 2019

This minor release accumulates a large number of improvements, changes and
bug fixes to the scimath codebase.

A few highlights of this release are :

* Support for Python 3

* Enhancements to time units and the addition new units.

* Support for newer versions of Numpy


Change summary since 4.1.2
~~~~~~~~~~~~~~~~~~~~~~~~~~

* Change: Setup Travis and Appveyor CI (#71)

* Change: Use PEP 440 compliant development version (#69)

* Fix : Restore parsing of angular minutes and seconds (#66)

* Feature : Enhancement of time units (#65)

* Fix : Missing imports (#63)

* Fix : Support newer versions of Numpy (#62)

* Feature: Port to Python 3 (#50)

* Converted the most-used traits to authentic TraitTypes. (#57)

* Added __str__ methods on UnitScalar and UnitArray classes, to make it easier
  to see values with their unit (label) (#46).

* Fix: Adding unit test for extending unit parser (#43)

* Fix: Parser extend method throws a NameError when custom units are added to the parser. (#41)

* Feature: added inHg unit for inches of mercury (#40)

* Feature: added dimensionless "fract" unit (#38)

* Feature: added units barn, rayl, barns_per_electron, US survey foot (#33)

* Fix: `None` was parsed into an invalid unit with `None` as its `value`. (#31)

* Fix: UnitArray comparisons will return boolean arrays, like their unadorned
  ndarray counterpart. (#29)

* Fix: raising a unitless `UnitArray` raised to a power. Thanks to @rupertnash
  for reporting and fixing the bug. (#5, #28)

* Fix: Remove trivial (0.0) offsets from the string representation of units. (#27)

* Fix: numpy change in how vectorize() keeps the original function. (#26)

* Feature: Enhance the unit parser to parse all of the provided units, with or without
  offsets. (#25)

* Fix: Correct the definition of PPG to be a density unit instead of a pressure
  gradient unit. Calculations using PPG as a pressure gradient unit can be
  recovered simply by multiplying the PPG quantity by g, the acceleration due
  to gravity. To precisely recover the exact values from the previous
  definition, use ``0.0519 * psi_per_f / ppg`` for this value, which is not
  necessarily the best estimate for g. (#24)

* Fix: Update to modern numpy C API to eliminate deprecation warnings (#22)

* Fix: PEP whitespace cleanups (#20)

* Fix: Address string literal deprecation warnings in _interpolate build, removing
  warnings during compilation (#19)
